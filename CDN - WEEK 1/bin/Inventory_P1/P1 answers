Analysis of Time Complexity

Adding Product:

Time Complexity: O(1) on average
Explanation: In a HashMap, the average time complexity for inserting an item is O(1), 
since it involves calculating the hash and placing the item in the 
corresponding bucket.

Updating Product:

Time Complexity: O(1) on average
Explanation: Similar to adding a product, updating a product involves finding the product 
by its key and replacing the value, which is an O(1) operation on average.

Deleting Product:

Time Complexity: O(1) on average
Explanation: Removing an item from a HashMap involves finding the item by its key and deleting it, 
which is an O(1) operation on average.

Optimization Suggestions

Load Factor and Initial Capacity:

By adjusting the initial capacity and load factor of the HashMap, the number of rehash operations can be reduced, 
thus improving overall performance.

Concurrent Access:

If the inventory system will be accessed by multiple threads, a ConcurrentHashMap can be used to handle concurrent 
modifications efficiently.

Batch Operations:

For large-scale updates or deletions, batching operations can be used to reduce the number of hash calculations 
and rehash operations.